// Generated by gencpp from file imu_driver/ConvertToQuaternion.msg
// DO NOT EDIT!


#ifndef IMU_DRIVER_MESSAGE_CONVERTTOQUATERNION_H
#define IMU_DRIVER_MESSAGE_CONVERTTOQUATERNION_H

#include <ros/service_traits.h>


#include <imu_driver/ConvertToQuaternionRequest.h>
#include <imu_driver/ConvertToQuaternionResponse.h>


namespace imu_driver
{

struct ConvertToQuaternion
{

typedef ConvertToQuaternionRequest Request;
typedef ConvertToQuaternionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ConvertToQuaternion
} // namespace imu_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::imu_driver::ConvertToQuaternion > {
  static const char* value()
  {
    return "65d8d4f0f20a4f15d3f80a0c317b43cd";
  }

  static const char* value(const ::imu_driver::ConvertToQuaternion&) { return value(); }
};

template<>
struct DataType< ::imu_driver::ConvertToQuaternion > {
  static const char* value()
  {
    return "imu_driver/ConvertToQuaternion";
  }

  static const char* value(const ::imu_driver::ConvertToQuaternion&) { return value(); }
};


// service_traits::MD5Sum< ::imu_driver::ConvertToQuaternionRequest> should match
// service_traits::MD5Sum< ::imu_driver::ConvertToQuaternion >
template<>
struct MD5Sum< ::imu_driver::ConvertToQuaternionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::imu_driver::ConvertToQuaternion >::value();
  }
  static const char* value(const ::imu_driver::ConvertToQuaternionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::imu_driver::ConvertToQuaternionRequest> should match
// service_traits::DataType< ::imu_driver::ConvertToQuaternion >
template<>
struct DataType< ::imu_driver::ConvertToQuaternionRequest>
{
  static const char* value()
  {
    return DataType< ::imu_driver::ConvertToQuaternion >::value();
  }
  static const char* value(const ::imu_driver::ConvertToQuaternionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::imu_driver::ConvertToQuaternionResponse> should match
// service_traits::MD5Sum< ::imu_driver::ConvertToQuaternion >
template<>
struct MD5Sum< ::imu_driver::ConvertToQuaternionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::imu_driver::ConvertToQuaternion >::value();
  }
  static const char* value(const ::imu_driver::ConvertToQuaternionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::imu_driver::ConvertToQuaternionResponse> should match
// service_traits::DataType< ::imu_driver::ConvertToQuaternion >
template<>
struct DataType< ::imu_driver::ConvertToQuaternionResponse>
{
  static const char* value()
  {
    return DataType< ::imu_driver::ConvertToQuaternion >::value();
  }
  static const char* value(const ::imu_driver::ConvertToQuaternionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // IMU_DRIVER_MESSAGE_CONVERTTOQUATERNION_H
